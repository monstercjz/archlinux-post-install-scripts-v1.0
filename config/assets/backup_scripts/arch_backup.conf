# ~/.config/arch_backup.conf or /etc/arch_backup.conf
# arch_backup.sh 脚本的配置文件 (版本 1.3.0+)

# === 基本设置 ===
# 备份文件存放的根目录。
# 请确保此目录存在并且有足够的磁盘空间。
CONF_BACKUP_ROOT_DIR="/mnt/backup/archlinux_system" # <<<--- 请务必修改为您的实际备份位置

# 日志文件设置
# CONF_LOG_FILE:
#   如果 CONF_LOG_TIMESTAMPED="false", 此为固定日志文件的完整路径。
#     例如: CONF_LOG_FILE="/var/log/arch_backup.log"
#   如果 CONF_LOG_TIMESTAMPED="true", 此为存放带时间戳日志文件的 *目录* 路径。
#     例如: CONF_LOG_FILE="/var/log/arch_backup_logs" (脚本会自动在此目录下创建 arch_backup.sh_YYYYMMDD_HHMMSS.log)
CONF_LOG_FILE="/var/log/arch_backup_logs"   # 推荐使用目录路径配合时间戳日志
CONF_LOG_TIMESTAMPED="true"                 # "true" 为每次运行创建新日志 (推荐), "false" 为追加到单一日志文件
CONF_LOG_RETENTION_DAYS="30"                # 如果 CONF_LOG_TIMESTAMPED="true", 保留多少天的日志文件 (0 表示不自动删除)
CONF_LOG_LEVEL="DEBUG"                       # DEBUG, INFO, WARN, ERROR, FATAL_ERROR (FATAL_ERROR会显示所有级别)

# === 用户特定备份设置 ===
# 如果希望备份特定用户的家目录 (而不是执行 sudo 的用户，或者当脚本由 root 的 cron 运行时)，
# 在这里指定用户名。如果留空，脚本将尝试确定原始 sudo 用户。
# 如果脚本以普通用户身份运行 (非 sudo)，则此设置无效，将备份当前用户。
CONF_TARGET_USERNAME="cjz" # 例如: "myuser", 或者留空 ""

# === 备份类别 ===
# 设置为 "true" 启用该类别的备份, "false" 则禁用。
CONF_BACKUP_SYSTEM_CONFIG="true"  # 系统配置文件 (/etc)
CONF_BACKUP_USER_DATA="true"      # 用户家目录数据 (由 CONF_TARGET_USERNAME 或 sudo 用户决定)
CONF_BACKUP_PACKAGES="true"       # 已安装软件包列表
CONF_BACKUP_LOGS="true"           # 系统日志 (/var/log, journalctl)
CONF_BACKUP_CUSTOM_PATHS="true"   # 用户自定义路径

# === 用户数据配置 (仅当 CONF_BACKUP_USER_DATA="true") ===
# 用户家目录下需要备份的项目列表 (空格分隔的数组)。路径相对于用户家目录。
CONF_USER_HOME_INCLUDE=(
    ".config"
    ".local/share"
    # ".ssh"  # 注意：备份 SSH 私钥需谨慎，确保备份安全
    # ".gnupg" # 注意：备份 GPG 私钥需谨慎
    ".bashrc"
    ".zsh_history"
    ".zshrc"
    ".gitconfig"
    # "Documents"
    # "Pictures"
    # "Code"
)
# 从用户家目录备份中排除的模式列表 (rsync 排除模式)。
CONF_USER_HOME_EXCLUDE=(
    "*/.cache/*"
    "*/Cache/*"          # Firefox, Chrome etc.
    "*/[Tt]rash/*"
    "*/Downloads/*"      # 通常包含临时或可重新获取的文件
    "*.tmp"
    "node_modules/"      # JS 项目依赖，通常很大且可重建
    ".npm/"
    ".bundle/"           # Ruby 项目依赖
    ".gradle/"           # Java/Android 项目缓存
    ".m2/"               # Maven 仓库缓存
    "target/"            # Rust/Java 构建输出
    "__pycache__/"
    "*.pyc"
    "arch_backup.conf"   # 避免备份脚本自身的配置文件 (如果在家目录)
    ".DS_Store"
    "Thumbs.db"
)

# === 自定义路径配置 (仅当 CONF_BACKUP_CUSTOM_PATHS="true") ===
# 需要备份的绝对路径列表。
CONF_CUSTOM_PATHS_INCLUDE=(
    # "/opt/my_custom_app/data"
    # "/srv/docker_volumes"
    # "/usr/local/bin"
    # "/etc/nginx/sites-available" # 如果不想备份整个 /etc 但需要特定子目录
)
# 自定义路径的 rsync 排除模式列表 (全局应用于所有 CONF_CUSTOM_PATHS_INCLUDE 中的项)。
CONF_CUSTOM_PATHS_EXCLUDE=(
    "*/temp_files/*"
    "*.log" # 如果这些路径下有大量日志，可能希望排除
    "*/backups/*" # 避免备份中包含备份
)

# === 系统日志配置 (仅当 CONF_BACKUP_LOGS="true") ===
# /var/log 下的关键日志文件/目录列表 (相对于 /var/log)。
CONF_SYSTEM_LOG_FILES=(
    "pacman.log"
    "Xorg.0.log"
    # "nginx" # 示例: 备份整个 nginx 日志目录
    # "journal" # journalctl 的输出通常更全面，如果启用下面选项，这个可能多余
)
# 是否捕获 journalctl 的输出?
CONF_BACKUP_JOURNALCTL="true"
# journalctl 的参数 (例如: --boot=-1 代表上次启动的日志, 为空则代表当前启动的所有日志)
CONF_JOURNALCTL_ARGS="" # 或例如: "--since yesterday" 或 "--lines=10000"

# === 备份机制 ===
# 是否启用增量备份 (使用 rsync 的 --link-dest)。
CONF_INCREMENTAL_BACKUP="true"

# 是否为旧备份启用压缩。
CONF_COMPRESSION_ENABLE="true"
# 压缩方法: gzip, bzip2, xz
CONF_COMPRESSION_METHOD="xz"
# 压缩级别 (取决于压缩方法, 例如 gzip/xz 为 1-9, xz 默认为 6)
CONF_COMPRESSION_LEVEL="6"
# CONF_COMPRESSION_EXT 会自动根据 METHOD 设置，无需手动配置 (e.g. tar.xz)

# === 保留策略 ===
# 保留最近多少个 *未压缩* 的快照。
# 如果启用了增量备份，这些快照将用于 --link-dest。最少为1。
CONF_RETENTION_UNCOMPRESSED_COUNT="3"

# 如何清理 *已压缩* 的归档文件:
# 保留特定数量的压缩归档 (0 禁用基于数量的保留)。
CONF_RETENTION_COMPRESSED_COUNT="10"
# 删除超过 X 天的压缩归档 (0 禁用基于时间的保留)。
CONF_RETENTION_COMPRESSED_DAYS="90"
# 两者都可设置。脚本会先按时间删除，然后如果数量仍超出，则删除最旧的以满足数量限制。

# === 高级功能 ===
# 并行备份任务的数量。
# 如果 > 1, 需要 GNU Parallel。如果找不到 parallel 或值为 1, 则回退到串行执行。
CONF_PARALLEL_JOBS="2" # 设置为 1 表示串行执行。推荐值不超过 CPU 核心数的一半到2/3，视磁盘IO瓶颈。

# === 资源使用控制 ===
# 是否使用 'nice' 来降低备份进程的 CPU 优先级。
CONF_USE_NICE="false" # 设置为 "true" 启用
CONF_NICE_LEVEL="10"  # nice 值 (0 表示最高优先级, 19 表示最低优先级)

# 是否使用 'ionice' 来降低备份进程的磁盘 I/O 优先级。
CONF_USE_IONICE="false" # 设置为 "true" 启用
CONF_IONICE_CLASS="2"   # ionice 类别: 1 (实时), 2 (尽力而为/best-effort), 3 (空闲/idle)
                        # 通常为 2 (best-effort) 或 3 (idle)
CONF_IONICE_LEVEL="4"   # ionice 级别 (对于 best-effort, 0-7, 数字越小优先级越高。用 4-7 来降低优先级)

# === 用户交互与安全 ===
# 在执行有风险的操作前 (例如删除旧备份) 是否提示用户确认。
# 对于 cron 作业或无头服务器，应设置为 "false"。
CONF_PROMPT_FOR_CONFIRMATION="false"

# 备份目标路径上要求的最小剩余磁盘空间百分比。
CONF_MIN_FREE_DISK_SPACE_PERCENT="10"